// =================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// =================================================================================

package model

import (
	"github.com/gogf/gf/os/gtime"
)

// App is the golang structure for table xpass_app.
type App struct {
	Id           int         `orm:"id,primary"   json:"id"`           //
	Code         string      `orm:"code"         json:"code"`         //
	AppName      string      `orm:"appName"      json:"appName"`      //
	ResourceJson string      `orm:"resourceJson" json:"resourceJson"` //
	CreatedTime  *gtime.Time `orm:"created_time" json:"createdTime"`  //
	UpdatedTime  *gtime.Time `orm:"updated_time" json:"updatedTime"`  //
	DeletedTime  *gtime.Time `orm:"deleted_time" json:"deletedTime"`  //
	Version      int         `orm:"version"      json:"version"`      //
	AppKey       string      `orm:"app_key"      json:"appKey"`       //
	AppSecret    string      `orm:"app_secret"   json:"appSecret"`    //
	ProjectDir   string      `orm:"project_dir"  json:"projectDir"`   //
}

// ControlInfo is the golang structure for table xpass_control_info.
type ControlInfo struct {
	Id              int         `orm:"id,primary"       json:"id"`              //
	Title           string      `orm:"title"            json:"title"`           //
	PropName        string      `orm:"prop_name"        json:"propName"`        //
	Icon            string      `orm:"icon"             json:"icon"`            //
	Order           string      `orm:"order"            json:"order"`           //
	GroupName       string      `orm:"group_name"       json:"groupName"`       //
	IsKey           int         `orm:"is_key"           json:"isKey"`           //
	IsHidden        int         `orm:"is_hidden"        json:"isHidden"`        //
	ControlType     string      `orm:"control_type"     json:"controlType"`     //
	ValidatorType   string      `orm:"validator_type"   json:"validatorType"`   //
	ControlPosition string      `orm:"control_position" json:"controlPosition"` //
	ExtraInfo       string      `orm:"extra_Info"       json:"extraInfo"`       //
	CreatedTime     *gtime.Time `orm:"created_time"     json:"createdTime"`     //
	UpdatedTime     *gtime.Time `orm:"updated_time"     json:"updatedTime"`     //
	DeletedTime     *gtime.Time `orm:"deleted_time"     json:"deletedTime"`     //
	Version         int         `orm:"version"          json:"version"`         //
	Sid             int         `orm:"sid"              json:"sid"`             //
	IsSort          int         `orm:"is_sort"          json:"isSort"`          //
	SqlType         string      `orm:"sql_type"         json:"sqlType"`         //
	SqlLength       int         `orm:"sql_length"       json:"sqlLength"`       //
	SqlDefault      string      `orm:"sql_default"      json:"sqlDefault"`      //
	SqlName         string      `orm:"sql_name"         json:"sqlName"`         //
	IsQuickSearch   int         `orm:"is_quick_search"  json:"isQuickSearch"`   //
	AuthType        string      `orm:"auth_type"        json:"authType"`        //
	IsFormat        int         `orm:"is_format"        json:"isFormat"`        //
	IsDisabled      int         `orm:"is_disabled"      json:"isDisabled"`      //
}

// EnumCatalog is the golang structure for table xpass_enum_catalog.
type EnumCatalog struct {
	Id          int         `orm:"id,primary"   json:"id"`          //
	Code        string      `orm:"code"         json:"code"`        //
	Name        string      `orm:"name"         json:"name"`        //
	EnumItem    string      `orm:"enumItem"     json:"enumItem"`    //
	CreatedTime *gtime.Time `orm:"created_time" json:"createdTime"` //
	UpdatedTime *gtime.Time `orm:"updated_time" json:"updatedTime"` //
	DeletedTime *gtime.Time `orm:"deleted_time" json:"deletedTime"` //
	Version     int         `orm:"version"      json:"version"`     //
	CreatorId   int         `orm:"creator_id"   json:"creatorId"`   //
	CreatorName string      `orm:"creator_name" json:"creatorName"` //
	AppId       int         `orm:"app_id"       json:"appId"`       //
}

// Solution is the golang structure for table xpass_solution.
type Solution struct {
	Id           int         `orm:"id,primary"    json:"id"`           //
	BizCode      string      `orm:"biz_code"      json:"bizCode"`      // 业务编码，资源编码
	ModelName    string      `orm:"model_name"    json:"modelName"`    // 方案所描述的实体名称，后端实体名称
	Title        string      `orm:"title"         json:"title"`        // 方案显示名称
	CreatedTime  *gtime.Time `orm:"created_time"  json:"createdTime"`  //
	UpdatedTime  *gtime.Time `orm:"updated_time"  json:"updatedTime"`  //
	DeletedTime  *gtime.Time `orm:"deleted_time"  json:"deletedTime"`  //
	Version      int         `orm:"version"       json:"version"`      //
	Lang         string      `orm:"lang"          json:"lang"`         //
	AppId        int         `orm:"app_id"        json:"appId"`        //
	SolutionType string      `orm:"solution_type" json:"solutionType"` //
}

// User is the golang structure for table xpass_user.
type User struct {
	Id          int         `orm:"id,primary"   json:"id"`          //
	Account     string      `orm:"account"      json:"account"`     //
	Name        string      `orm:"name"         json:"name"`        //
	NickName    string      `orm:"nickName"     json:"nickName"`    //
	CreatedTime *gtime.Time `orm:"created_time" json:"createdTime"` //
	UpdatedTime *gtime.Time `orm:"updated_time" json:"updatedTime"` //
	DeletedTime *gtime.Time `orm:"deleted_time" json:"deletedTime"` //
	Version     int         `orm:"version"      json:"version"`     //
	CreatorId   int         `orm:"creator_id"   json:"creatorId"`   //
	CreatorName string      `orm:"creator_name" json:"creatorName"` //
}
